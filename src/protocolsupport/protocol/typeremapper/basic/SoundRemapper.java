package protocolsupport.protocol.typeremapper.basic;

import org.bukkit.NamespacedKey;

import protocolsupport.api.ProtocolVersion;
import protocolsupport.protocol.typeremapper.utils.RemappingRegistry.GenericRemappingRegistry;
import protocolsupport.protocol.typeremapper.utils.RemappingTable.GenericRemappingTable;
import protocolsupport.protocol.utils.ProtocolVersionsHelper;
import protocolsupport.protocol.utils.minecraftdata.MinecraftSoundData;
import protocolsupportbuildprocessor.Preload;

@Preload
public class SoundRemapper {

	public static final GenericRemappingRegistry<String, GenericRemappingTable<String>> SOUND_REMAPPING_REGISTRY = new GenericRemappingRegistry<String, GenericRemappingTable<String>>() {
		{
			//sounds were autogenerated by comparing json files and weren't checked for correctness
			registerRemapEntry("entity.zombie_horse.ambient", "mob.horse.zombie.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.gravel.break", "dig.gravel", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.gravel.place", "dig.gravel", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.arrow.hit", "random.bowhit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.tripwire.detach", "random.bowhit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.splash_potion.break", "dig.glass", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.glass.break", "dig.glass", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.zombie.ambient", "mob.zombie.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_villager.ambient", "mob.zombie.say", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.pig.death", "mob.pig.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.mule.hurt", "mob.horse.donkey.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.donkey.hurt", "mob.horse.donkey.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.generic.swim", "game.neutral.swim", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.hostile.swim", "game.hostile.swim", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.player.swim", "game.player.swim", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.generic.swim", "liquid.swim", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.hostile.swim", "liquid.swim", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.player.swim", "liquid.swim", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("block.portal.ambient", "portal.portal", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.generic.burn", "random.fizz", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.fire.extinguish", "random.fizz", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.redstone_torch.burnout", "random.fizz", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.lava.extinguish", "random.fizz", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.generic.extinguish_fire", "random.fizz", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.snow.hit", "step.snow", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.snow.fall", "step.snow", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.snow.step", "step.snow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.arrow.hit_player", "random.successful_hit", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.wolf.howl", "mob.wolf.howl", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.cow.hurt", "mob.cow.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.cow.death", "mob.cow.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.blaze.hurt", "mob.blaze.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.villager.death", "mob.villager.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.blaze.death", "mob.blaze.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_horse.death", "mob.horse.zombie.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.silverfish.death", "mob.silverfish.kill", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.endermite.death", "mob.silverfish.kill", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.wolf.pant", "mob.wolf.panting", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.metal.break", "dig.stone", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.metal.place", "dig.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.stone.break", "dig.stone", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.stone.place", "dig.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.anvil.break", "dig.stone", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.glass.place", "dig.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.player.splash", "game.player.swim.splash", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.hostile.splash", "game.hostile.swim.splash", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.generic.splash", "game.neutral.swim.splash", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.player.splash", "liquid.splash", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.hostile.splash", "liquid.splash", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.generic.splash", "liquid.splash", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("music.nether", "music.game.nether", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ghast.death", "mob.ghast.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.guardian.attack", "mob.guardian.attack", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.dispenser.fail", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.comparator.click", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.stone_button.click_on", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.stone_button.click_off", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.tripwire.click_on", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.dispenser.dispense", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("ui.button.click", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.lever.click", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.tripwire.attach", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.tripwire.click_off", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("music.dragon", "music.game.end.dragon", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.elder_guardian.ambient_land", "mob.guardian.land.idle", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.guardian.ambient_land", "mob.guardian.land.idle", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.grass.break", "dig.grass", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.grass.place", "dig.grass", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.skeleton.step", "mob.skeleton.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wither.death", "mob.wither.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wolf.hurt", "mob.wolf.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.pig.saddle", "mob.horse.leather", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.saddle", "mob.horse.leather", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.bat.loop", "mob.bat.loop", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.ghast.hurt", "mob.ghast.scream", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.generic.death", "game.neutral.die", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.hostile.hurt", "game.hostile.hurt", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.player.hurt", "game.player.hurt", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.hostile.death", "game.hostile.die", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.generic.hurt", "game.neutral.hurt", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.player.death", "game.player.die", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.hostile.death", "damage.hit", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.generic.hurt", "damage.hit", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.player.death", "damage.hit", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.hostile.death", "damage.hit", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.generic.hurt", "damage.hit", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.player.death", "damage.hit", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.player.hurt", "damage.hit", ProtocolVersionsHelper.BEFORE_1_6);
			registerRemapEntry("entity.creeper.death", "mob.creeper.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.gallop", "mob.horse.gallop", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wither.spawn", "mob.wither.spawn", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.creeper.hurt", "mob.creeper.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.step_wood", "mob.horse.wood", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.rabbit.death", "mob.rabbit.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_villager.converted", "mob.zombie.unfect", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.anvil.use", "random.anvil_use", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.mooshroom.shear", "mob.sheep.shear", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.sheep.shear", "mob.sheep.shear", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.item.pickup", "random.pop", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.bat.death", "mob.bat.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.wood.place", "dig.wood", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wood.break", "dig.wood", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.ladder.place", "dig.wood", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.ladder.break", "dig.wood", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.mule.death", "mob.horse.donkey.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.donkey.death", "mob.horse.donkey.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.guardian.flop", "mob.guardian.flop", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.villager.yes", "mob.villager.yes", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ghast.warn", "mob.ghast.charge", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.tnt.primed", "creeper.primed", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.creeper.primed", "creeper.primed", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.sand.place", "dig.sand", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.sand.break", "dig.sand", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.chicken.ambient", "mob.chicken.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.elder_guardian.death", "mob.guardian.elder.death", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.skeleton_horse.death", "mob.horse.skeleton.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("weather.rain", "ambient.weather.rain", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("weather.rain.above", "ambient.weather.rain", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.portal.trigger", "portal.trigger", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.land", "mob.horse.land", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.endermite.step", "mob.silverfish.step", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.silverfish.step", "mob.silverfish.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.bat.takeoff", "mob.bat.takeoff", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.villager.no", "mob.villager.no", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie.attack_iron_door", "mob.zombie.metal", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.villager.trading", "mob.villager.haggle", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("item.firecharge.use", "mob.ghast.fireball", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.ghast.shoot", "mob.ghast.fireball", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.blaze.shoot", "mob.ghast.fireball", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music.credits", "music.game.end.credits", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.item.break", "random.break", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("item.shield.break", "random.break", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_villager.cure", "mob.zombie.remedy", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.dispenser.launch", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.skeleton.shoot", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.experience_bottle.throw", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.snowman.shoot", "random.bow", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.arrow.shoot", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.egg.throw", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.snowball.throw", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.splash_potion.throw", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.villager.ambient", "mob.villager.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.silverfish.hurt", "mob.silverfish.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.endermite.hurt", "mob.silverfish.hit", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music.game", "music.game", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.lava.ambient", "liquid.lava", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.player.big_fall", "game.player.hurt.fall.big", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.generic.big_fall", "game.neutral.hurt.fall.big", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.hostile.big_fall", "game.hostile.hurt.fall.big", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.player.big_fall", "damage.fallbig", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.generic.big_fall", "damage.fallbig", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.hostile.big_fall", "damage.fallbig", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.blaze.burn", "fire.fire", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.fire.ambient", "fire.fire", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.chicken.step", "mob.chicken.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.elder_guardian.hurt_land", "mob.guardian.land.hit", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.guardian.hurt_land", "mob.guardian.land.hit", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.chicken.egg", "mob.chicken.plop", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.donkey.chest", "mob.chicken.plop", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.grass.step", "step.grass", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.grass.fall", "step.grass", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.grass.hit", "step.grass", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.horse.breathe", "mob.horse.breathe", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.mule.ambient", "mob.horse.donkey.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.donkey.ambient", "mob.horse.donkey.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.spider.step", "mob.spider.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.cow.ambient", "mob.cow.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.jump", "mob.horse.jump", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.step", "mob.horse.soft", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.guardian.hurt", "mob.guardian.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_villager.step", "mob.zombie.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie.step", "mob.zombie.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wolf.shake", "mob.wolf.shake", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.anvil.place", "random.anvil_land", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.anvil.land", "random.anvil_land", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.minecart.inside", "minecart.inside", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.slime.squish", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.slime.jump", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.slime.hurt", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.slime.death", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.water.ambient", "liquid.water", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.pig.hurt", "mob.pig.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.pig.ambient", "mob.pig.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wither.shoot", "mob.wither.shoot", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("item.firecharge.use", "item.fireCharge.use", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.ghast.shoot", "item.fireCharge.use", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.blaze.shoot", "item.fireCharge.use", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.sand.hit", "step.sand", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.sand.step", "step.sand", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.sand.fall", "step.sand", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music.creative", "music.game.creative", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.death", "mob.horse.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.bat.hurt", "mob.bat.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ghast.scream", "mob.ghast.affectionate_scream", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.elder_guardian.ambient", "mob.guardian.elder.idle", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.minecart.riding", "minecart.base", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.ladder.step", "step.ladder", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.ladder.fall", "step.ladder", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.ladder.hit", "step.ladder", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.donkey.angry", "mob.horse.donkey.angry", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("ambient.cave", "ambient.cave.cave", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.generic.drink", "random.drink", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("music.menu", "music.menu", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.cat.hiss", "mob.cat.hiss", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.spider.ambient", "mob.spider.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.spider.hurt", "mob.spider.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.stone.fall", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.anvil.fall", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.metal.step", "step.stone", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.stone.hit", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.glass.fall", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.stone.step", "step.stone", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.anvil.step", "step.stone", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.metal.hit", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.glass.step", "step.stone", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.metal.fall", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.glass.hit", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.anvil.hit", "step.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.player.levelup", "random.levelup", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.lava.pop", "liquid.lavapop", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.sheep.hurt", "mob.sheep.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.sheep.death", "mob.sheep.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.sheep.ambient", "mob.sheep.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.skeleton.ambient", "mob.skeleton.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.blaze.ambient", "mob.blaze.breathe", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.bat.ambient", "mob.bat.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.ambient", "mob.horse.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_horse.hurt", "mob.horse.zombie.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.gravel.fall", "step.gravel", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.gravel.step", "step.gravel", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.gravel.hit", "step.gravel", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.endermite.ambient", "mob.silverfish.say", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.silverfish.ambient", "mob.silverfish.say", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.cat.purr", "mob.cat.purr", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie.infect", "mob.zombie.infect", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.generic.eat", "random.eat", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wolf.ambient", "mob.wolf.bark", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.tnt.primed", "game.tnt.primed", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.creeper.primed", "game.tnt.primed", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.sheep.step", "mob.sheep.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_villager.death", "mob.zombie.death", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.zombie.death", "mob.zombie.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.shulker.teleport", "mob.endermen.portal", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("item.chorus_fruit.teleport", "mob.endermen.portal", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.angry", "mob.horse.angry", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wolf.growl", "mob.wolf.growl", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.snow.break", "dig.snow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.snow.place", "dig.snow", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.piston.extend", "tile.piston.out", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.player.burp", "random.burp", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.cow.step", "mob.cow.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wither.hurt", "mob.wither.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.guardian.death_land", "mob.guardian.land.death", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.elder_guardian.death_land", "mob.guardian.land.death", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music.end", "music.game.end", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.chicken.hurt", "mob.chicken.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.chicken.death", "mob.chicken.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wolf.step", "mob.wolf.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wolf.death", "mob.wolf.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wolf.whine", "mob.wolf.whine", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.hostile.small_fall", "game.hostile.hurt.fall.small", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.player.small_fall", "game.player.hurt.fall.small", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.generic.small_fall", "game.neutral.hurt.fall.small", ProtocolVersionsHelper.RANGE__1_7_5__1_8);
			registerRemapEntry("entity.hostile.small_fall", "damage.fallsmall", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.player.small_fall", "damage.fallsmall", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.generic.small_fall", "damage.fallsmall", ProtocolVersionsHelper.BEFORE_1_7);
			registerRemapEntry("entity.rabbit.hurt", "mob.rabbit.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.cat.purreow", "mob.cat.purreow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.skeleton.hurt", "mob.skeleton.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.spider.death", "mob.spider.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.anvil.destroy", "random.anvil_break", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wither.ambient", "mob.wither.idle", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.elder_guardian.hurt", "mob.guardian.elder.hit", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.cat.death", "mob.cat.hitt", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.cat.hurt", "mob.cat.hitt", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("item.flintandsteel.use", "fire.ignite", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie.hurt", "mob.zombie.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_villager.hurt", "mob.zombie.hurt", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.generic.explode", "random.explode", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.end_gateway.spawn", "random.explode", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.slime.attack", "mob.slime.attack", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.skeleton_horse.hurt", "mob.horse.skeleton.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.rabbit.jump", "mob.rabbit.hop", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ghast.ambient", "mob.ghast.moan", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.elder_guardian.curse", "mob.guardian.curse", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.splash_potion.break", "game.potion.smash", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.glass.break", "game.potion.smash", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.dispenser.fail", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.comparator.click", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.stone_button.click_on", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.stone_button.click_off", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.tripwire.click_on", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.dispenser.dispense", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("ui.button.click", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.lever.click", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.tripwire.attach", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.metal_pressureplate.click_off", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.tripwire.click_off", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.metal_pressureplate.click_on", "gui.button.press", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.experience_orb.touch", "random.orb", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.experience_orb.pickup", "random.orb", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.wither.break_block", "mob.zombie.woodbreak", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.horse.armor", "mob.horse.armor", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.rabbit.ambient", "mob.rabbit.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.piston.contract", "tile.piston.in", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.cat.ambient", "mob.cat.meow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.pig.step", "mob.pig.step", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.wood.hit", "step.wood", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wood.fall", "step.wood", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wood.step", "step.wood", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.portal.travel", "portal.travel", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.guardian.death", "mob.guardian.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.skeleton.death", "mob.skeleton.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.horse.hurt", "mob.horse.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.villager.hurt", "mob.villager.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.skeleton_horse.ambient", "mob.horse.skeleton.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			//manually mapped sounds
			registerRemapEntry("block.chest.open", "random.chestopen", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.chest.close", "random.chestclosed", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.player.hurt_on_fire", "entity.player.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.player.hurt_on_fire", "game.player.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.player.hurt_drown", "entity.player.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.player.hurt_drown", "game.player.hurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.note_block.basedrum", "note.bd", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.note_block.bass", "note.bassattack", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.note_block.harp", "note.harp", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.note_block.hat", "note.hat", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.note_block.pling", "note.pling", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.note_block.snare", "note.snare", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.note_block.basedrum", "block.note.basedrum", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.bass", "block.note.bass", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.bell", "block.note.bell", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.chime", "block.note.chime", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.flute", "block.note.flute", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.guitar", "block.note.guitar", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.harp", "block.note.harp", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.hat", "block.note.hat", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.pling", "block.note.pling", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.snare", "block.note.snare", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.note_block.xylophone", "block.note.xylophone", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wool.break", "dig.cloth", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.wool.break", "block.cloth.break", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wool.fall", "step.cloth", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wool.fall", "block.cloth.fall", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wool.hit", "step.cloth", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wool.hit", "block.cloth.hit", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wool.place", "dig.cloth", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wool.place", "block.cloth.place", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wool.step", "step.cloth", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.wool.step", "block.cloth.step", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.ender_chest.close", "random.chestclosed", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.ender_chest.close", "block.enderchest.close", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.ender_chest.open", "random.chestopen", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.ender_chest.open", "block.enderchest.open", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.metal_pressure_plate.click_off", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.metal_pressure_plate.click_off", "block.metal_pressureplate.click_off", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.metal_pressure_plate.click_on", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.metal_pressure_plate.click_on", "block.metal_pressureplate.click_on", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.slime_block.break", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.slime_block.break", "block.slime.break", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.slime_block.fall", "mob.slime.small", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.slime_block.fall", "block.slime.fall", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.slime_block.hit", "mob.slime.small", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.slime_block.hit", "block.slime.hit", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.slime_block.place", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.slime_block.place", "block.slime.place", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.slime_block.step", "mob.slime.small", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.slime_block.step", "block.slime.step", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.stone_pressure_plate.click_off", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.stone_pressure_plate.click_off", "block.stone_pressureplate.click_off", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.stone_pressure_plate.click_on", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.stone_pressure_plate.click_on", "block.stone_pressureplate.click_on", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.lily_pad.place", "block.waterlily.place", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wooden_pressure_plate.click_off", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.wooden_pressure_plate.click_off", "block.wood_pressureplate.click_off", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wooden_pressure_plate.click_on", "random.click", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("block.wooden_pressure_plate.click_on", "block.wood_pressureplate.click_on", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wooden_button.click_on", "random.wood_click", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wooden_button.click_on", "block.wood_button.click_on", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("block.wooden_button.click_off", "random.wood_click", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("block.wooden_button.click_off", "block.wood_button.click_off", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.armor_stand.break", "entity.armorstand.break", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.armor_stand.fall", "dig.wood", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.armor_stand.fall", "entity.armorstand.fall", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.armor_stand.hit", "entity.armorstand.hit", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.armor_stand.place", "dig.stone", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.armor_stand.place", "entity.armorstand.place", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.fishing_bobber.retrieve", "entity.bobber.retrieve", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.fishing_bobber.splash", "random.splash", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.fishing_bobber.splash", "entity.bobber.splash", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.fishing_bobber.throw", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.fishing_bobber.throw", "entity.bobber.throw", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.enderdragon.ambient", "mob.enderdragon.growl", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.ender_dragon.ambient", "entity.enderdragon.ambient", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_dragon.death", "mob.enderdragon.end", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.ender_dragon.death", "entity.enderdragon.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_dragon.flap", "mob.enderdragon.wings", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.ender_dragon.flap", "entity.enderdragon.flap", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_dragon.growl", "mob.enderdragon.growl", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ender_dragon.growl", "entity.enderdragon.growl", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_dragon.hurt", "mob.enderdragon.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ender_dragon.hurt", "entity.enderdragon.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_dragon.shoot", "mob.ghast.fireball", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ender_dragon.shoot", "item.fireCharge.use", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.ender_dragon.shoot", "entity.enderdragon.shoot", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_dragon.explode", "random.explode", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.dragon_fireball.explode", "entity.enderdragon_fireball.explode", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_eye.death", "entity.endereye.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_eye.launch", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ender_eye.launch", "entity.endereye.launch", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.enderman.ambient", "mob.endermen.idle", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.enderman.ambient", "entity.endermen.ambient", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.enderman.death", "mob.endermen.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.enderman.death", "entity.endermen.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.enderman.hurt", "mob.endermen.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.enderman.hurt", "entity.endermen.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.enderman.scream", "mob.endermen.scream", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.enderman.scream", "entity.endermen.scream", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.enderman.stare", "mob.endermen.stare", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.enderman.stare", "entity.endermen.stare", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.enderman.teleport", "mob.endermen.portal", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.enderman.teleport", "entity.endermen.teleport", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.ender_pearl.throw", "random.bow", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.ender_pearl.throw", "entity.enderpearl.throw", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.evoker.ambient", "entity.evocation_illager.ambient", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.evoker.cast_spell", "entity.evocation_illager.cast_spell", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.evoker.death", "entity.evocation_illager.death", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.evoker.hurt", "entity.evocation_illager.hurt", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.evoker.prepare_attack", "entity.evocation_illager.prepare_attack", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.evoker.prepare_summon", "entity.evocation_illager.prepare_summon", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.evoker.prepare_wololo", "entity.evocation_illager.prepare_wololo", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.firework_rocket.blast", "fireworks.blast", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.blast", "entity.firework.blast", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.firework_rocket.blast_far", "fireworks.blast_far", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.blast_far", "entity.firework.blast_far", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.firework_rocket.large_blast", "fireworks.largeBlast", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.large_blast", "entity.firework.large_blast", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.firework_rocket.large_blast_far", "fireworks.largeBlast_far", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.large_blast_far", "entity.firework.large_blast_far", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.firework_rocket.launch", "fireworks.launch", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.launch", "entity.firework.launch", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.firework_rocket.shoot", "random.bow", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.shoot", "entity.firework.shoot", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.firework_rocket.twinkle", "fireworks.twinkle", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.twinkle", "entity.firework.twinkle", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.firework_rocket.twinkle_far", "fireworks.twinkle_far", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.firework_rocket.twinkle_far", "entity.firework.twinkle_far", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.illusioner.ambient", "entity.illusion_illager.ambient", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.illusioner.cast_spell", "entity.illusion_illager.cast_spell", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.illusioner.death", "entity.illusion_illager.death", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.illusioner.hurt", "entity.illusion_illager.hurt", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.illusioner.mirror_move", "entity.illusion_illager.mirror_move", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.illusioner.prepare_blindness", "entity.illusion_illager.prepare_blindness", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.illusioner.prepare_mirror", "entity.illusion_illager.prepare_mirror", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.iron_golem.attack", "mob.irongolem.throw", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.iron_golem.attack", "entity.illusion_illager.attack", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.iron_golem.death", "mob.irongolem.death", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.iron_golem.death", "entity.irongolem.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.iron_golem.hurt", "mob.irongolem.hit", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.iron_golem.hurt", "entity.irongolem.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.iron_golem.step", "mob.irongolem.walk", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.iron_golem.step", "entity.irongolem.step", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.item_frame.add_item", "entity.itemframe.add_item", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.item_frame.break", "entity.itemframe.break", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.item_frame.place", "entity.itemframe.place", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.item_frame.remove_item", "entity.itemframe.remove_item", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.item_frame.rotate_item", "entity.itemframe.rotate_item", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.leash_knot.break", "entity.leashknot.break", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.leash_knot.place", "entity.leashknot.place", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.lightning.impact", "random.explode", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.lightning_bolt.impact", "entity.lightning.impact", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.lightning.thunder", "ambient.weather.thunder", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.lightning_bolt.thunder", "entity.lightning.thunder", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.lingeringpotion.throw", "random.bow", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.lingering_potion.throw", "entity.lingeringpotion.throw", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.magma_cube.death", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.magma_cube.death", "entity.magmacube.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.magma_cube.hurt", "mob.slime.big", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.magma_cube.hurt", "entity.magmacube.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.magma_cube.jump", "mob.magmacube.jump", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.magma_cube.jump", "entity.magmacube.jump", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.magma_cube.squish", "mob.magmacube.big", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.magma_cube.squish", "entity.magmacube.squish", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.parrot.imitate.ender_dragon", "entity.parrot.imitate.enderdragon", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.parrot.imitate.evoker", "entity.parrot.imitate.evocation_illager", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.parrot.imitate.illusioner", "entity.parrot.imitate.illusion_illager", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.parrot.imitate.magma_cube", "entity.parrot.imitate.magmacube", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.parrot.imitate.vindicator", "entity.parrot.imitate.vindication_illager", ProtocolVersionsHelper.ALL_1_12);
			registerRemapEntry("entity.polar_bear.ambient_baby", "entity.polar_bear.baby_ambient", ProtocolVersionsHelper.RANGE__1_10__1_12_2);
			registerRemapEntry("entity.magma_cube.death_small", "mob.slime.small", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.magma_cube.death_small", "entity.small_magmacube.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.magma_cube.hurt_small", "mob.slime.small", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.magma_cube.hurt_small", "entity.small_magmacube.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.magma_cube.squish_small", "mob.magmacube.small", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.magma_cube.squish_small", "entity.small_magmacube.squish", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.slime.death_small", "mob.slime.small", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.slime.death_small", "entity.small_slime.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.slime.hurt_small", "mob.slime.small", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.slime.hurt_small", "entity.small_slime.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.slime.jump_small", "entity.small_slime.jump", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.slime.squish_small", "entity.small_slime.squish", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.snow_golem.ambient", "entity.snowman.ambient", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.snow_golem.death", "entity.snowman.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.snow_golem.hurt", "entity.snowman.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.snow_golem.shoot", "random.bow", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("entity.snow_golem.shoot", "entity.snowman.shoot", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.vindicator.ambient", "entity.vindication_illager.ambient", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.vindicator.death", "entity.vindication_illager.death", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.vindicator.hurt", "entity.vindication_illager.hurt", ProtocolVersionsHelper.RANGE__1_11__1_12_2);
			registerRemapEntry("entity.zombie.attack_wooden_door", "mob.zombie.wood", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie.attack_wooden_door", "entity.zombie.attack_door_wood", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.zombie.break_wooden_door", "mob.zombie.woodbreak", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie.break_wooden_door", "entity.zombie.break_door_wood", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.zombie_pigman.ambient", "mob.zombiepig.zpig", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_pigman.ambient", "entity.zombie_pig.ambient", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.zombie_pigman.angry", "mob.zombiepig.zpigangry", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_pigman.angry", "entity.zombie_pig.angry", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.zombie_pigman.death", "mob.zombiepig.zpigdeath", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_pigman.death", "entity.zombie_pig.death", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("entity.zombie_pigman.hurt", "mob.zombiepig.zpighurt", ProtocolVersionsHelper.BEFORE_1_9_AND_PE);
			registerRemapEntry("entity.zombie_pigman.hurt", "entity.zombie_pig.hurt", ProtocolVersionsHelper.RANGE__1_9__1_12_2);
			registerRemapEntry("music_disc.11", "records.11", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.11", "record.11", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.13", "records.13", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.13", "record.13", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.blocks", "records.blocks", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.blocks", "record.blocks", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.cat", "records.cat", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.cat", "record.cat", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.chirp", "records.chirp", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.chirp", "record.chirp", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.far", "records.far", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.far", "record.far", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.mall", "records.mall", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.mall", "record.mall", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.mellohi", "records.mellohi", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.mellohi", "record.mellohi", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.stal", "records.stal", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.stal", "record.stal", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.strad", "records.strad", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.strad", "record.strad", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.wait", "records.wait", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.wait", "record.wait", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);
			registerRemapEntry("music_disc.ward", "records.ward", ProtocolVersionsHelper.BEFORE_1_9);
			registerRemapEntry("music_disc.ward", "record.ward", ProtocolVersionsHelper.RANGE__1_9__1_12_2_AND_PE);

			// PE specific mappings
			registerRemapEntry("block.anvil.fall", "fall.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.anvil.hit", "hit.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.beacon.activate", "beacon.activate", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.beacon.ambient", "beacon.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.beacon.deactivate", "beacon.deactivate", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.beacon.power_select", "beacon.power", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.brewing_stand.brew", "random.potion.brewed", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.bubble_column.bubble_pop", "bubble.pop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.bubble_column.upwards_ambient", "bubble.up", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.bubble_column.upwards_inside", "bubble.upinside", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.bubble_column.whirlpool_ambient", "bubble.down", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.bubble_column.whirlpool_inside", "bubble.downinside", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.chorus_flower.death", "block.chorusflower.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.chorus_flower.grow", "block.chorusflower.grow", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.conduit.activate", "conduit.activate", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.conduit.ambient", "conduit.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.conduit.ambient.short", "conduit.short", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.conduit.attack.target", "conduit.attack", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.conduit.deactivate", "conduit.deactivate", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.ender_chest.close", "random.enderchestclosed", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.ender_chest.open", "random.enderchestopen", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.furnace.fire_crackle", "furnace.lit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.glass.break", "random.glass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.glass.fall", "fall.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.glass.hit", "hit.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.glass.place", "use.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.grass.fall", "fall.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.grass.hit", "hit.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.grass.place", "use.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.gravel.fall", "fall.gravel", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.gravel.hit", "hit.gravel", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.gravel.place", "use.gravel", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.iron_door.close", "random.door_close", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.iron_door.open", "random.door_open", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.ladder.fall", "fall.ladder", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.ladder.hit", "hit.ladder", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.ladder.place", "use.ladder", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.metal.fall", "fall.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.metal.hit", "hit.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.metal.place", "use.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.sand.fall", "fall.sand", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.sand.hit", "hit.sand", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.sand.place", "use.sand", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.shulker_box.close", "random.shulkerboxclosed", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.shulker_box.open", "random.shulkerboxopen", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.slime_block.fall", "fall.slime", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.slime_block.hit", "hit.slime", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.slime_block.place", "use.slime", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.slime_block.step", "step.slime", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.snow.fall", "fall.snow", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.snow.hit", "hit.snow", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.snow.place", "use.snow", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.stone.fall", "fall.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.stone.hit", "hit.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.stone.place", "use.stone", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wet_grass.break", "dig.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wet_grass.fall", "fall.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wet_grass.hit", "hit.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wet_grass.place", "use.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wet_grass.step", "step.grass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wood.fall", "fall.wood", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wood.hit", "hit.wood", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wood.place", "use.wood", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wooden_button.click_off", "random.click", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wooden_button.click_on", "random.click", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wooden_door.close", "random.door_close", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wooden_door.open", "random.door_open", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wool.fall", "fall.cloth", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wool.hit", "hit.cloth", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("block.wool.place", "use.cloth", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.armor_stand.break", "mob.armor_stand.break", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.armor_stand.fall", "mob.armor_stand.land", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.armor_stand.hit", "mob.armor_stand.hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.armor_stand.place", "mob.armor_stand.place", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.arrow.hit_player", "random.bowhit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.blaze.shoot", "mob.blaze.shoot", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.cat.death", "mob.cat.hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.cat.hurt", "mob.cat.hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.cod.ambient", "mob.fish.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.cod.death", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.cod.flop", "mob.fish.flop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.cod.hurt", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.cow.milk", "mob.cow.milk", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.creeper.primed", "mob.creeper.say", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.ambient", "mob.dolphin.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.ambient_water", "mob.dolphin.idle_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.attack", "mob.dolphin.attack", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.death", "mob.dolphin.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.eat", "mob.dolphin.eat", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.hurt", "mob.dolphin.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.jump", "mob.dolphin.jump", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.play", "mob.dolphin.play", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.splash", "mob.dolphin.splash", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dolphin.swim", "mob.dolphin.swim", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.dragon_fireball.explode", "random.explode", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.ambient", "mob.drowned.say", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.ambient_water", "mob.drowned.say_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.death", "mob.drowned.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.death_water", "mob.drowned.death_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.hurt", "mob.drowned.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.hurt_water", "mob.drowned.hurt_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.shoot", "mob.drowned.shoot", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.step", "mob.drowned.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.drowned.swim", "mob.drowned.swim", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.ambient", "mob.elderguardian.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.ambient_land", "mob.guardian.land_idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.curse", "mob.elderguardian.curse", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.death", "mob.elderguardian.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.death_land", "mob.guardian.land_death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.flop", "mob.guardian.flop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.hurt", "mob.elderguardian.hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.elder_guardian.hurt_land", "mob.guardian.land_hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.ender_dragon.ambient", "mob.enderdragon.growl", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.ender_dragon.death", "mob.enderdragon.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.ender_dragon.flap", "mob.enderdragon.flap", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.endermite.ambient", "mob.endermite.say", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.endermite.death", "mob.endermite.kill", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.endermite.hurt", "mob.endermite.hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.endermite.step", "mob.endermite.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker.ambient", "mob.evocation_illager.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker.cast_spell", "mob.evocation_illager.cast_spell", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker.death", "mob.evocation_illager.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker.hurt", "mob.evocation_illager.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker.prepare_attack", "mob.evocation_illager.prepare_attack", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker.prepare_summon", "mob.evocation_illager.prepare_summon", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker.prepare_wololo", "mob.evocation_illager.prepare_wololo", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.evoker_fangs.attack", "mob.evocation_fangs.attack", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.blast", "firework.blast", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.blast_far", "firework.blast", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.large_blast", "firework.large_blast", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.large_blast_far", "firework.large_blast", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.launch", "firework.launch", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.shoot", "firework.shoot", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.twinkle", "firework.twinkle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.firework_rocket.twinkle_far", "firework.twinkle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.generic.big_fall", "damage.fallbig", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.generic.hurt", "random.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.generic.small_fall", "damage.fallsmall", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.generic.splash", "random.splash", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.generic.swim", "random.swim", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.guardian.ambient", "mob.guardian.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.guardian.ambient_land", "mob.guardian.land_idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.guardian.attack", "mob.guardian.attack_loop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.guardian.death_land", "mob.guardian.land_death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.guardian.hurt_land", "mob.guardian.land_hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.horse.eat", "mob.horse.eat", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.hostile.splash", "random.splash", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.hostile.swim", "random.swim", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.husk.ambient", "mob.husk.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.husk.death", "mob.husk.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.husk.hurt", "mob.husk.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.husk.step", "mob.husk.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.item_frame.add_item", "block.itemframe.add_item", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.item_frame.break", "block.itemframe.break", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.item_frame.place", "block.itemframe.place", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.item_frame.remove_item", "block.itemframe.remove_item", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.item_frame.rotate_item", "block.itemframe.rotate_item", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.leash_knot.break", "leashknot.break", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.leash_knot.place", "leashknot.place", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.lightning_bolt.impact", "ambient.weather.lightning.impact", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.lightning_bolt.thunder", "ambient.weather.thunder", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.lingering_potion.throw", "random.bow", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.ambient", "mob.llama.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.angry", "mob.llama.angry", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.chest", "random.chestopen", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.death", "mob.llama.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.eat", "mob.llama.eat", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.hurt", "mob.llama.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.spit", "mob.llama.spit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.step", "mob.llama.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.llama.swag", "mob.llama.swag", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.mule.chest", "random.chestopen", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.painting.break", "block.itemframe.break", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.painting.place", "block.itemframe.place", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.parrot.ambient", "mob.parrot.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.parrot.death", "mob.parrot.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.parrot.eat", "mob.parrot.eat", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.parrot.fly", "mob.parrot.fly", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.parrot.hurt", "mob.parrot.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.parrot.step", "mob.parrot.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.phantom.ambient", "mob.phantom.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.phantom.bite", "mob.phantom.bite", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.phantom.death", "mob.phantom.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.phantom.flap", "mob.phantom.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.phantom.hurt", "mob.phantom.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.phantom.swoop", "mob.phantom.swoop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.attack.crit", "game.player.attack.strong", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.attack.nodamage", "game.player.attack.nodamage", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.attack.strong", "game.player.attack.strong", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.attack.sweep", "game.player.attack.strong", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.attack.weak", "game.player.attack.nodamage", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.big_fall", "damage.fallbig", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.death", "game.player.die", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.hurt", "game.player.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.small_fall", "damage.fallsmall", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.splash", "random.splash", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.splash.high_speed", "random.splash", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.player.swim", "random.swim", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.polar_bear.ambient", "mob.polarbear.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.polar_bear.ambient_baby", "mob.polarbear_baby.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.polar_bear.death", "mob.polarbear.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.polar_bear.hurt", "mob.polarbear.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.polar_bear.step", "mob.polarbear.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.polar_bear.warning", "mob.polarbear.warning", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.puffer_fish.ambient", "mob.fish.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.puffer_fish.death", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.puffer_fish.flop", "mob.fish.flop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.puffer_fish.hurt", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.salmon.ambient", "mob.fish.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.salmon.death", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.salmon.flop", "mob.fish.flop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.salmon.hurt", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.ambient", "mob.shulker.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.close", "mob.shulker.close", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.death", "mob.shulker.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.hurt", "mob.shulker.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.hurt_closed", "mob.shulker.close.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.open", "mob.shulker.open", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.shoot", "mob.shulker.shoot", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker.teleport", "mob.shulker.teleport", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker_bullet.hit", "mob.shulker.bullet.hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.shulker_bullet.hurt", "mob.shulker.bullet.hit", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.skeleton_horse.ambient_water", "mob.horse.skeleton.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.skeleton_horse.gallop_water", "mob.horse.gallop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.skeleton_horse.jump_water", "mob.horse.jump", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.skeleton_horse.swim", "random.swim", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.slime.death", "mob.slime.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.slime.hurt", "mob.slime.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.slime.jump", "mob.slime.jump", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.slime.jump_small", "mob.slime.jump", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.slime.squish", "mob.slime.squish", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.slime.squish_small", "mob.slime.squish", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.snow_golem.death", "mob.snowgolem.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.snow_golem.hurt", "mob.snowgolem.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.snow_golem.shoot", "mob.snowgolem.shoot", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.splash_potion.break", "random.glass", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.squid.ambient", "mob.squid.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.squid.death", "mob.squid.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.squid.hurt", "mob.squid.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.stray.ambient", "mob.stray.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.stray.death", "mob.stray.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.stray.hurt", "mob.stray.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.stray.step", "mob.stray.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.tnt.primed", "mob.creeper.say", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.tropical_fish.ambient", "mob.fish.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.tropical_fish.death", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.tropical_fish.flop", "mob.fish.flop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.tropical_fish.hurt", "mob.fish.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.ambient_land", "mob.turtle.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.death", "mob.turtle.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.death_baby", "mob.turtle_baby.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.egg_break", "block.turtle_egg.break", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.egg_crack", "block.turtle_egg.crack", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.egg_hatch", "mob.turtle_baby.born", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.hurt", "mob.turtle.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.hurt_baby", "mob.turtle_baby.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.lay_egg", "block.turtle_egg.drop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.shamble", "mob.turtle.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.shamble_baby", "mob.turtle_baby.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.turtle.swim", "mob.turtle.swim", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.vex.ambient", "mob.vex.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.vex.charge", "mob.vex.charge", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.vex.death", "mob.vex.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.vex.hurt", "mob.vex.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.villager.trade", "mob.villager.haggle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.vindicator.ambient", "mob.vindicator.idle", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.vindicator.death", "mob.vindicator.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.vindicator.hurt", "mob.vindicator.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.witch.ambient", "mob.witch.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.witch.death", "mob.witch.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.witch.drink", "mob.witch.drink", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.witch.hurt", "mob.witch.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.witch.throw", "mob.witch.throw", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.wither.ambient", "mob.wither.ambient", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.wither.break_block", "mob.wither.break_block", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.wither_skeleton.ambient", "mob.skeleton.say", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.wither_skeleton.death", "mob.skeleton.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.wither_skeleton.hurt", "mob.skeleton.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.wither_skeleton.step", "mob.skeleton.step", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.wolf.howl", "mob.wolf.bark", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.zombie_villager.ambient", "mob.zombie_villager.say", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.zombie_villager.death", "mob.zombie_villager.death", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("entity.zombie_villager.hurt", "mob.zombie_villager.hurt", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_chain", "armor.equip_chain", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_diamond", "armor.equip_diamond", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_elytra", "armor.equip_generic", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_generic", "armor.equip_generic", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_gold", "armor.equip_gold", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_iron", "armor.equip_iron", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_leather", "armor.equip_leather", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.armor.equip_turtle", "armor.equip_generic", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bottle.empty", "bucket.empty_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bottle.fill", "bucket.fill_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bottle.fill_dragonbreath", "bottle.dragonbreath", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bucket.empty", "bucket.empty_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bucket.empty_fish", "bucket.empty_fish", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bucket.empty_lava", "bucket.empty_lava", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bucket.fill", "bucket.fill_water", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bucket.fill_fish", "bucket.fill_fish", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.bucket.fill_lava", "bucket.fill_lava", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.elytra.flying", "elytra.loop", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.firecharge.use", "mob.ghast.fireball", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("item.totem.use", "random.totem", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("music.credits", "music.game.credits", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("music.dragon", "music.game.endboss", ProtocolVersionsHelper.ALL_PE);
			registerRemapEntry("ui.toast.challenge_complete", "random.toast", ProtocolVersionsHelper.ALL_PE);

			/*

			NOTE:

			*** The following sounds exist on the PC server, but has no mapping to PE. This mean that no sound will be played
			    on the PE client for the following.

			ambient.cave, ambient.underwater.enter, ambient.underwater.exit, ambient.underwater.loop,
			ambient.underwater.loop.additions, ambient.underwater.loop.additions.rare,
			ambient.underwater.loop.additions.ultra_rare, block.chest.locked, block.coral_block.break,
			block.coral_block.fall, block.coral_block.hit, block.coral_block.place, block.coral_block.step,
			block.enchantment_table.use, block.fence_gate.close, block.fence_gate.open, block.iron_trapdoor.close,
			block.iron_trapdoor.open, block.lily_pad.place, block.note_block.bell, block.note_block.chime,
			block.note_block.flute, block.note_block.guitar, block.note_block.xylophone, block.pumpkin.carve,
			block.wooden_trapdoor.close, block.wooden_trapdoor.open, enchant.thorns.hit, entity.bat.loop,
			entity.boat.paddle_land, entity.boat.paddle_water, entity.ender_eye.death, entity.fish.swim,
			entity.fishing_bobber.retrieve, entity.generic.death, entity.hostile.big_fall, entity.hostile.death,
			entity.hostile.hurt, entity.hostile.small_fall, entity.husk.converted_to_zombie, entity.illusioner.ambient,
			entity.illusioner.cast_spell, entity.illusioner.death, entity.illusioner.hurt,
			entity.illusioner.mirror_move, entity.illusioner.prepare_blindness, entity.illusioner.prepare_mirror,
			entity.parrot.imitate.blaze, entity.parrot.imitate.creeper, entity.parrot.imitate.drowned,
			entity.parrot.imitate.elder_guardian, entity.parrot.imitate.ender_dragon, entity.parrot.imitate.enderman,
			entity.parrot.imitate.endermite, entity.parrot.imitate.evoker, entity.parrot.imitate.ghast,
			entity.parrot.imitate.husk, entity.parrot.imitate.illusioner, entity.parrot.imitate.magma_cube,
			entity.parrot.imitate.phantom, entity.parrot.imitate.polar_bear, entity.parrot.imitate.shulker,
			entity.parrot.imitate.silverfish, entity.parrot.imitate.skeleton, entity.parrot.imitate.slime,
			entity.parrot.imitate.spider, entity.parrot.imitate.stray, entity.parrot.imitate.vex,
			entity.parrot.imitate.vindicator, entity.parrot.imitate.witch, entity.parrot.imitate.wither,
			entity.parrot.imitate.wither_skeleton, entity.parrot.imitate.wolf, entity.parrot.imitate.zombie,
			entity.parrot.imitate.zombie_pigman, entity.parrot.imitate.zombie_villager, entity.player.attack.knockback,
			entity.player.breath, entity.puffer_fish.blow_out, entity.puffer_fish.blow_up, entity.puffer_fish.sting,
			entity.rabbit.attack, entity.skeleton_horse.step_water, entity.snow_golem.ambient, entity.squid.squirt,
			entity.zombie.attack_iron_door, entity.zombie.destroy_egg, entity.zombie.infect, item.axe.strip,
			item.hoe.till, item.shovel.flatten, music.under_water, ui.toast.in, ui.toast.out

			*** The following sounds exists in the PE client, without us having a mapping to them. This either means the
			    functionality does not exist in PC yet (upcoming 1.14), or possibly that we're missing some remap.

			block.bamboo.break, block.bamboo.fall, block.bamboo.hit, block.bamboo.place, block.bamboo.step,
			block.bamboo_sapling.break, block.bamboo_sapling.place, block.end_portal.spawn,
			block.end_portal_frame.fill, block.false_permissions, block.scaffolding.break, block.scaffolding.climb,
			block.scaffolding.fall, block.scaffolding.hit, block.scaffolding.place, block.scaffolding.step,
			camera.take_picture, cauldron.adddye, cauldron.cleanarmor, cauldron.cleanbanner, cauldron.dyearmor,
			cauldron.explode, cauldron.fillpotion, cauldron.fillwater, cauldron.takepotion, cauldron.takewater,
			crossbow.loading.end, crossbow.loading.middle, crossbow.loading.start, crossbow.quick_charge.end,
			crossbow.quick_charge.middle, crossbow.quick_charge.start, crossbow.shoot,
			entity.zombie.converted_to_drowned, fall.egg, item.book.page_turn, item.book.put, item.shield.block,
			item.trident.hit, item.trident.hit_ground, item.trident.return, item.trident.riptide_1,
			item.trident.riptide_2, item.trident.riptide_3, item.trident.throw, item.trident.thunder, jump.cloth,
			jump.grass, jump.gravel, jump.sand, jump.slime, jump.snow, jump.stone, jump.wood, land.cloth, land.grass,
			land.gravel, land.sand, land.slime, land.snow, land.stone, land.wood, mob.agent.spawn, mob.cat.beg,
			mob.cat.eat, mob.cat.straymeow, mob.dolphin.blowhole, mob.ocelot.death, mob.ocelot.idle, mob.panda.bite,
			mob.panda.cant_breed, mob.panda.death, mob.panda.eat, mob.panda.hurt, mob.panda.idle,
			mob.panda.idle.aggressive, mob.panda.idle.worried, mob.panda.presneeze, mob.panda.sneeze, mob.panda.step,
			mob.panda_baby.idle, mob.pig.boost, mob.pillager.death, mob.pillager.hurt, mob.pillager.idle, note.bass,
			random.fuse, random.pop2, random.screenshot, ui.loom.select_pattern, ui.loom.take_result, vr.stutterturn

			*** The following few sounds has the same name in the PC server and PE client, so no mapping is necessary
			    since a non-map assumes the same value. (This means that all other sounds are remapped.)

			block.end_portal.spawn, block.end_portal_frame.fill, item.shield.block, item.trident.hit,
			item.trident.hit_ground, item.trident.return, item.trident.riptide_1, item.trident.riptide_2,
			item.trident.riptide_3, item.trident.throw, item.trident.thunder, entity.zombie.converted_to_drowned

			*/

		}

		@Override
		public void registerRemapEntry(String from, String to, ProtocolVersion... versions) {
			super.registerRemapEntry(from, to, versions);
			super.registerRemapEntry(NamespacedKey.minecraft(from).toString(), to, versions);
		}

		@Override
		protected GenericRemappingTable<String> createTable() {
			return new GenericRemappingTable<>();
		}

	};

	public static String getSoundName(ProtocolVersion version, String name) {
		return SOUND_REMAPPING_REGISTRY.getTable(version).getRemap(name);
	}

	public static String getSoundName(ProtocolVersion version, int id) {
		return getSoundName(version, MinecraftSoundData.getNameById(id));
	}

}
